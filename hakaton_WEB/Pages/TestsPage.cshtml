@page
@model hakaton_WEB.Pages.TestsPageModel

<h1>Список тестов</h1>

<div class="test-container">
    @if (Model.Tests != null && Model.Tests.Any())
    {
        foreach (var test in Model.Tests)
        {
            <div class="test-item">
                <h3>@test.Competency.Name</h3> <!-- Название компетенции -->
                <a asp-page="/TestPage" asp-route-testId="@test.Id" class="btn btn-primary">Пройти тест</a>
            </div>
        }
    }
    else
    {
        <p>Нет доступных тестов.</p>
    }
</div>

<style>
    .test-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* Два столбца одинаковой ширины */
        gap: 20px; /* Отступы между элементами */
        margin: 20px; /* Общие отступы контейнера */
    }

    .test-item {
        padding: 15px;
        border: 1px solid #ccc; /* Граница вокруг элемента */
        border-radius: 5px; /* Закругление углов */
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* Тень для эффекта глубины */
        display: flex; /* Используем flexbox для расположения содержимого внутри блока */
        flex-direction: column; /* Вертикальное расположение элементов внутри блока */
        justify-content: space-between; /* Разделяем пространство между элементами внутри блока */
        height: auto; /* Высота автоматически подстраивается под содержимое */
    }

    .btn {
        background-color: #007bff; /* Цвет кнопки */
        color: white; /* Цвет текста кнопки */
        border: none; /* Убираем границу */
        padding: 10px 15px; /* Отступы внутри кнопки */
        border-radius: 5px; /* Закругление углов кнопки */
        cursor: pointer; /* Курсор при наведении */
        margin-top: auto; /* Отодвигаем кнопку вниз в блоке */
    }

    .btn:hover {
        background-color: #0056b3; /* Цвет кнопки при наведении */
    }

</style>
